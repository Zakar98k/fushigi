[{"content":"","date":"27 February 2024","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"27 February 2024","permalink":"/tags/game-development/","section":"Tags","summary":"","title":"Game-Development"},{"content":"","date":"27 February 2024","permalink":"/tags/godot/","section":"Tags","summary":"","title":"Godot"},{"content":" ","date":"27 February 2024","permalink":"/","section":"Homepage","summary":" ","title":"Homepage"},{"content":"","date":"27 February 2024","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"I made a Youtube Tutorial on how to implement a Hitbox Flipping mechanic in Godot. See embedded video below:\nA GitHub repository for this project is also available: Zakar98k/godot-hitbox-flipping Project repo for my Godot hitbox flipping tutorial: https://www.youtube.com/watch?v=lHC3YqYB9mI GDScript 0 0 Implementation # I used a composition-based approach to implement the Hitbox Flipping. By utilizing composition, we\u0026rsquo;re able to define scenes called \u0026ldquo;components\u0026rdquo;, that we will later be able to reuse in other scenes: the player scene, any enemy scene, or even traps that need to be flipped.\nTo implement Hitbox Flipping, we need to define 3 new scenes, each with one node only.\nFlippable Sprite Component # The job of this component is to notify any Flippable Collision Shapes whenever the sprite is flipped, so that the Flippable Collision Shapes can update their positions and flip as well.\nMake a new scene with the root node being a Sprite2D. Rename the Sprite2D to FlippableSprite. Save the scene anywhere as flippable_sprite.tscn\nAttach a script to your newly renamed FlippableSprite node. Save it anywhere as flippable_sprite.gd\n# flippable_sprite.gd extends Sprite2D class_name FlippableSprite signal sprite_flipped(flip_value) var flipped: bool = false: set(new_value): if new_value != flipped: flipped = new_value flip_h = flipped sprite_flipped.emit(new_value) In the script, we define a new signal called sprite_flipped(flip_value). This signal will be emitted in our setter function, set(new_value), whenever the value of our variable flipped is set. (you can read more about Godot 4 setters and getters here)\nIn our setter function, we set the value of the variable flipped to the new flip value, and we also set the value of Sprite2D\u0026rsquo;s property flip_h to the new flip value\nFlippable Collision Shape Component # This component will listen to the signal sprite_flipped(flipped_value) that we defined earlier in Flippable Sprite Component\nMake a new scene with the root node being a CollisionShape2D. Rename the CollisionShape2D to FlippableShape. Save the scene anywhere as flippable_shape.tscn.\nThe FlippableShape node will throw 2 errors. Ignore them, as we\u0026rsquo;ll resolve these errors later on by initializing this scene as a child of a parent HitboxComponent scene and giving it a shape.\nAttach a script to your newly renamed FlippableShape node. Save it anywhere as flippable_shape.gd\n# flippable_shape.gd extends CollisionShape2D class_name FlippableShape @export var default_position: Vector2: set(new_position): default_position = new_position position = new_position var current_flip_value: bool func _on_sprite_flipped(flip_value): if current_flip_value != flip_value: default_position.x *= -1 current_flip_value = flip_value Our function _on_sprite_flipped(flip_value) will be called everytime the signal sprite_flipped(flip_value) is emitted.\nTo get the flip, we multiply default_position.x by -1, this mirrors the position to the other side.\nFor example, let\u0026rsquo;s say default_position.x is 20. By doing default_position.x *= -1, 20 becomes -20; it flips as a result.\nHitbox Component # This component will serve to connect the sprite_flipped signal from our Flippable Sprite Component to the function _on_sprite_flipped(flip_value) that will flip the Flippable Shape Component\nMake a new scene with the root node being a Area2D. Rename the Area2D to HitboxComponent. Save the scene anywhere as hitbox_component.tscn.\nAttach a script to your newly renamed HitboxComponent node. Save it anywhere as hitbox_component.gd\n# hitbox_component.gd extends Area2D class_name HitboxComponent @export var flippable_sprite: FlippableSprite func _ready(): if flippable_sprite != null: for child in get_children(): flippable_sprite.sprite_flipped.connect(child._on_sprite_flipped) child.disabled = true Don\u0026rsquo;t forget to set a FlippableSprite for the flippable_sprite export var that we defined\nwe set child.disabled = true so that we don\u0026rsquo;t have an active hitbox when the parent scene is added to the scene tree. For example: we don\u0026rsquo;t want the player starting off with an active hitbox even though we haven\u0026rsquo;t pressed the attack button.\nYou can then connect HitboxComponent\u0026rsquo;s body_entered(body: Node2D) signal to a function that deals damage to any class that can take damage, like the player, enemy, or breakable items like pots.\nUsage # Any scene that you want to have hitbox flipping should have the 3 scenes defined above as its children: FlippableSprite, FlippableShape, and HitboxComponent\nAn example implementation:\nDon\u0026rsquo;t forget to set a FlippableSprite node for the flippable_sprite export var that we defined in HitboxComponent:\nDon\u0026rsquo;t forget to set a shape and default_position for your FlippableShape:\nDon\u0026rsquo;t forget to set FlippableShape\u0026rsquo;s disabled property to true during the active frames, and false during the inactive frames of your attack animation.\n","date":"27 February 2024","permalink":"/posts/proper_collision_shape_flipping_in_godot_4/","section":"Posts","summary":"I made a Youtube Tutorial on how to implement a Hitbox Flipping mechanic in Godot.","title":"Proper Collision Shape Flipping in Godot 4"},{"content":"","date":"27 February 2024","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"27 February 2024","permalink":"/categories/tutorial/","section":"Categories","summary":"","title":"Tutorial"},{"content":"","date":"27 February 2024","permalink":"/categories/youtube-video/","section":"Categories","summary":"","title":"Youtube-Video"},{"content":"I\u0026rsquo;m gonna be talking about instant gratification, its negative effects, and the things you can do to combat it.\nMy Experience # I consume way too much \u0026ldquo;internet\u0026rdquo;. Not speaking in the bandwidth sense, but in the sense that I spend a lot of my time on sites like Youtube, Discord, and Instagram.\nAnd it\u0026rsquo;s not limited to social-media sites only. Sometimes I would spend hours deathscrolling through sites like Pinterest, Twitter, and Reddit. I wouldn\u0026rsquo;t get bored of it too, I ignored the work I needed to do, because I chose instant gratification.\nHours and hours \u0026ndash; and sometimes a full day \u0026ndash; would go by without me realizing it.\nAll of this gradually dulled my attention-span and ability to focus, which is everything to me as a student. I also started to feel like a lesser human, cause I wasn\u0026rsquo;t being as efficient when it came to learning or being productive.\nWhy write about this? # This post might seem a little vent-y, but I write about this because I want to remind myself and kind of acknowledge that it is a problem. (it has been for a long time, personally)\nThe more we try our best to avoid instant gratification, the more clear our mind is, and as a result improves focus. Taking those steps to kind of set up guardrails around distractions can help build healthy habits, and break bad habits.\nThings that help me stay productive # Unhook # Browser extensions like unhook allow you to hide YouTube\u0026rsquo;s recommended section, making it significantly harder to get distracted unless you deliberately choose to do so. (see screenshot below)\nNo thumbnails = less things to click on Unhook has options to disable the subscriptions, comments, and even the Youtube shorts buttons.\nThere are also other web-extensions that can block websites during a specific period of time. (I wont list any here, because I personally didn\u0026rsquo;t see the need for them yet)\npomofocus.io # I think that the pomodoro is a great productivity system. It allows your work to be more focused, and your breaks to be effective.\npomofocus.io allows you to define tasks that can be completed through pomodoro intervals. You can even set custom intervals and work/break times to suit your preference.\nDashboard for pomofocus Have a list of stuff you wanna learn or do # If you\u0026rsquo;re a programmer like me, having a list of technologies you want to learn keeps you organized and on track.\nSit down and think about what field of programming you want to get into, be it front-end development, data-science, or whatever. Make a list of new technologies you want to learn, relative to the field you wish to explore. This could be a programming language, a new JavaScript framework, a skill like UI Design or database management, etc Set your goals according to the list of technologies you want to learn If you want to dip your toes in C++, an example goal would be to: finish 4hr introductory course on YT about C++ ","date":"25 February 2024","permalink":"/posts/instant_gratification_overstimulation_and_brainrot/","section":"Posts","summary":"\u003cp\u003eI\u0026rsquo;m gonna be talking about instant gratification, its negative effects, and the things you can do to combat it.\u003c/p\u003e","title":"Instant Gratification, Overstimulation, and Brainrot"},{"content":"","date":"25 February 2024","permalink":"/tags/self-improvement/","section":"Tags","summary":"","title":"Self-Improvement"},{"content":"","date":"22 February 2024","permalink":"/tags/hugo/","section":"Tags","summary":"","title":"Hugo"},{"content":"Yup, the mandatory first post for all personal websites, where the author talk about their experience in making it, blah blah\nNew site? # Yup. I don\u0026rsquo;t plan on keeping the old one, since it\u0026rsquo;s outdated and it\u0026rsquo;s hard to keep it updated with new content. My current site (this one) is built with hugo, a framwork for building static sites by converting markdown files into HTML.\nWhy make a new one?\nWhile I do like the ideas and the look and feel of my previous website, I also want to move on to more a more modern approach and framework. Hugo does exactly that, and it makes it so easy to update the site, add new content/posts to it, styling it, etc. Highly recommend that you check Hugo out, it has a lot of cool stuff like HTML templates \u0026amp; variables, shortcodes, methods, and themes.\nMaking the new site # How hard is it to get a website out there on the internet?\nI\u0026rsquo;d say not too difficult, as long as you know how the basics work (HTML, CSS, domains). A lot of information is available online on how to get sites up and running with different services (GitHub Pages, Netlify, Vercel, and others)\nYou can view the GitHub repo for the site here:\nZakar98k/fushigi Personal site built with Hugo and themed with Risotto HTML 1 0 About my projects # How are you spending time as someone who is currently learning programming/gamedev?\nI\u0026rsquo;m currently working on a game for my final project for CS50 (yes long overdue). The game concept being a platformer version of dark-souls. Definitely keep an eye out for that.\nThat is all\nThanks for reading, and I hope you have a great day! 😌\n","date":"22 February 2024","permalink":"/posts/my_first_post/","section":"Posts","summary":"\u003cp\u003eYup, the mandatory first post for all personal websites, where the author talk about their experience in making it, blah blah\u003c/p\u003e","title":"My First Post"},{"content":"","date":"22 February 2024","permalink":"/tags/personal-website/","section":"Tags","summary":"","title":"Personal-Website"},{"content":" print(\u0026ldquo;hello world\u0026rdquo;) # Hey there 👋. I’m Zach.\nI’m a (soon-graduating) highschool student who loves coding, gamedev, and programming. I\u0026rsquo;m the type of person who doesn’t really have to worry about what to do with their free-time, since I have plenty of hobbies. Some of these are:\nGame-Development Enjoying a good movie Ricing Guilty Gear \u0026amp; Tekken Studying Japanese Discovering new music Manga \u0026amp; Anime I dipped my toes in programming when I was 16. I took on Harvard\u0026rsquo;s introductory course to computer science called CS50. Since then, I have really been attached to programming, computers, and game design.\n","date":"22 February 2024","permalink":"/about/","section":"About Me","summary":"print(\u0026ldquo;hello world\u0026rdquo;) # Hey there 👋.","title":"About Me"},{"content":"","date":"22 February 2024","permalink":"/tags/people/","section":"Tags","summary":"","title":"People"}]